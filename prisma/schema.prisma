// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model DiscordAccount {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  discordId String    @unique
  messages  Message[]
}

model Signup {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String?
  limit    Int?
  players  String[]
  backups  String[]
  isLocked Boolean  @default(false)
}

// Roles and Setups

model Role {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String   @unique
  otherNames   String[]
  alignment    String
  abilities    String
  winCondition String
  iconUrl      String?
  flavourText  String?
  roleColour   String?
  wikiUrl      String?
}

// Archive
model Game {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  channels Channel[]
  gameTag  String    @unique
}

model Channel {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  game   Game   @relation(fields: [gameId], references: [id])
  gameId String @db.ObjectId

  guildId   String
  channelId String  @unique
  name      String
  isThread  Boolean @default(false)

  messages Message[]
  thread   Thread[]
}

model Thread {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  channel   Channel @relation(fields: [channelId], references: [id])
  message   Message @relation(fields: [messageId], references: [id])
  channelId String  @db.ObjectId
  messageId String  @db.ObjectId
}

model Message {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  channel   Channel @relation(fields: [channelId], references: [id])
  channelId String  @db.ObjectId

  messageId    String    @unique
  guildId      String
  createdAt    DateTime
  editedAt     DateTime?
  cleanContent String?
  threads      Thread[]
  pinned       Boolean   @default(false)

  repliedTo String?

  author   DiscordAccount @relation(fields: [authorId], references: [id])
  authorId String         @db.ObjectId
}
